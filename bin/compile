#!/bin/sh
# bin/compile <build-dir> <cache-dir> <env-dir>
set -e

BUILD_DIR=$1
CACHE_DIR=$2
ENV_DIR=$3

# Default Hugo version
DEFAULT_HUGO_VERSION="0.83.1"

# attempt to extract the HUGO_VERSION parameter form the Heroku configuration vars, fall back to the default version if unavailable
if [ -d "$ENV_DIR" -a -e "$ENV_DIR/HUGO_VERSION" ]; then
  export HUGO_VERSION=$(cat "$ENV_DIR/HUGO_VERSION")
else
  echo "\n-----> HUGO VERSION not defined, using $DEFAULT_HUGO_VERSION."
  export HUGO_VERSION=$DEFAULT_HUGO_VERSION
fi

# Hugo URL ( download from GH builds )
RELEASE_NAME=hugo_extended_${HUGO_VERSION}_Linux-64bit
FILE_NAME=${RELEASE_NAME}.tar.gz
HUGO_PACKAGE=https://github.com/gohugoio/hugo/releases/download/v${HUGO_VERSION}/${FILE_NAME}

# Store the hugo package in the cache_dir ( persistent across builds )
mkdir -p $CACHE_DIR
if ! [ -e $CACHE_DIR/$FILE_NAME ]; then
  echo "\n-----> Fetching Hugo ${HUGO_VERSION} binaries at ${HUGO_PACKAGE}"
  curl $HUGO_PACKAGE -L -s -o $CACHE_DIR/$FILE_NAME
fi

# Extract the binary in the working directory
echo "\n-----> Extracting Hugo ${HUGO_VERSION} binaries to ${BUILD_DIR}"
mkdir -p $CACHE_DIR/$RELEASE_NAME
mkdir -p $BUILD_DIR/.heroku/hugo/bin/
tar -zxvf $CACHE_DIR/$FILE_NAME -C $CACHE_DIR
mv $CACHE_DIR/hugo $BUILD_DIR/.heroku/hugo/bin/hugo

export PATH=$PATH:$BUILD_DIR/.heroku/hugo/bin/

hugo version
